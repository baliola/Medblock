type CreateEmrForUserRequest = record { emr_records : text; owner : text };
type DisplayV001 = record {
  updated_at : nat64;
  records : text;
  created_at : nat64;
  emr_id : text;
};
type EmrDisplay = variant { V001 : DisplayV001 };
type EmrListProviderRequest = record { max : nat8; anchor : nat64 };
type ReadEmrByIdRequest = record { emr_id : text };
type RebindPatientRequest = record { owner : principal; hashed_nik : text };
type RegisterProviderRequest = record {
  encryted_display_name : text;
  new_provider : principal;
};
type Result = variant { Ok; Err : text };
type RevokePatientAccessRequest = record { owner : principal };
type SuspendProviderRequest = record { provider : principal };
type UpdateEmrRequest = record {
  emr_id : text;
  updated_emr_data : vec record { text; text };
};
service : {
  create_emr_for_user : (CreateEmrForUserRequest) -> ();
  emr_list_patient : () -> (opt vec text) query;
  emr_list_provider : (EmrListProviderRequest) -> (vec text) query;
  read_emr_by_id : (ReadEmrByIdRequest) -> (opt EmrDisplay) query;
  rebind_patient : (RebindPatientRequest) -> ();
  register_new_provider : (RegisterProviderRequest) -> ();
  register_patient : (RebindPatientRequest) -> (Result);
  revoke_patient_access : (RevokePatientAccessRequest) -> ();
  suspend_provider : (SuspendProviderRequest) -> ();
  update_emr : (UpdateEmrRequest) -> ();
}