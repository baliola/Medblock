type CreateEmrRequest = record {
  emr : vec EmrFragment;
  provider_id : text;
  user_id : text;
};
type CreateEmrResponse = record { header : Header };
type EmrFragment = record { key : text; value : text };
type EmrHeaderWithBody = record { body : vec EmrFragment; header : Header };
type Header = record { provider_id : text; user_id : text; emr_id : text };
type ReadEmrByIdResponse = record { emr : EmrHeaderWithBody };
type RemoveEmrRequest = record { header : Header };
type RemoveEmrResponse = record { status : bool };
type UpdateEmrRequest = record { fields : vec EmrFragment; header : Header };
service : () -> {
  create_emr : (CreateEmrRequest) -> (CreateEmrResponse);
  ping : () -> () query;
  read_emr_by_id : (Header) -> (ReadEmrByIdResponse) query;
  remove_emr : (RemoveEmrRequest) -> (RemoveEmrResponse);
  update_emr : (UpdateEmrRequest) -> (RemoveEmrRequest);
}
